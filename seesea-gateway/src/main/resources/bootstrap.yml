server:
  port: 8002
  servlet:
    context-path: /gateway
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000'
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  application:
    name: seesea-gateway
  profiles:
    active: local
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
management:
  endpoints:
    web:
      exposure:
        include: 'refresh'
mybatis:
  mapper-locations: classpath:mybatis/*.xml
zuul:
  host:
    connect-timeout-millis: 30000
    socket-timeout-millis: 30000
  routes:
    gateway:
      path: /api
      serviceId: seesea-gateway
    sms:
      path: /sms/**
      serviceId: seesea-sms
#
#  zuul.routes.user.path=/user/**
#  zuul.routes.user.serviceId=seesea-user



logging:
  level:
    com.seesea.seeseagateway.mapper: debug

---
spring:
  profiles: home
  datasource:
    url: jdbc:mysql://192.168.3.3:3306/seesea?serverTimezone=UTC
    username: root
    password: mysql@123A
  cloud:
    config:
      label: master
      profile: home
      discovery:
        enabled: true
        service-id: seesea-config
      uri: http://192.168.3.3:8001
  rabbitmq:
    addresses: amqp://rmfntena:5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t@mustang.rmq.cloudamqp.com/rmfntena
    username: rmfntena
    password: 5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t
eureka:
  client:
    service-url:
      defaultZone: http://192.168.3.3:8000/eureka/
my:
  redis:
    host: 13.125.100.22
    password: redispwd
    timeout: 30000
    maxWait: 30000
---

spring:
  profiles: local
  datasource:
    url: jdbc:mysql://10.1.8.193:3306/test?serverTimezone=UTC
    username: root
    password: 123456
  cloud:
    config:
      label: master
      profile: local
      discovery:
        enabled: true
        service-id: seesea-config
      uri: http://10.1.94.170:8001
  rabbitmq:
    addresses: amqp://rmfntena:5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t@mustang.rmq.cloudamqp.com/rmfntena
    username: rmfntena
    password: 5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t
eureka:
  client:
    service-url:
      defaultZone: http://10.1.94.170:8000/eureka/
my:
  redis:
    host: 13.125.100.22
    password: redispwd
    timeout: 30000
    maxWait: 30000
---

spring:
  profiles: service
  cloud:
    config:
      label: master
      profile: dev
      discovery:
        enabled: true
        service-id: seesea-config
      uri: http://localhost:8001
  rabbitmq:
    addresses: amqp://rmfntena:5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t@mustang.rmq.cloudamqp.com/rmfntena
    username: rmfntena
    password: 5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t
eureka:
  client:
    service-url:
      defaultZone: http://192.168.3.3:8000/eureka/


---

spring:
  profiles: wonder
  cloud:
    config:
      label: master
      profile: dev
      discovery:
        enabled: true
        service-id: seesea-config
      uri: http://localhost:8001
  rabbitmq:
    addresses: amqp://rmfntena:5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t@mustang.rmq.cloudamqp.com/rmfntena
    username: rmfntena
    password: 5IKC8mBMYuLR5Nnk5VTjakaXkuA4O6_t
eureka:
     client:
       service-url:
         defaultZone: http://192.168.3.3:8000/eureka/


